services:
  api-gateway:
    build:
      context: ./api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - keycloak
    volumes:
      - ./api-gateway:/app
    networks:
      - local_network

 # Write Kweet Service
  write-kweet:
    build:
      context: ./write
    environment:
      POSTGRES_DB_KWEET: ${POSTGRES_DB_KWEET}
      POSTGRES_USER_KWEET: ${POSTGRES_USER_KWEET}
      POSTGRES_PASSWORD_KWEET: ${POSTGRES_PASSWORD_KWEET}
    depends_on:
      - postgres-kweets
    ports:
      - "8082:8082"
    networks:
      - local_network
  
  postgres:
    image: postgres:16.2
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - local_network

  postgres-kweets:
    image: postgres:16.2
    volumes:
      - postgres_kweets_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB_KWEET}
      POSTGRES_USER: ${POSTGRES_USER_KWEET}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_KWEET}
    networks:
      - local_network

  keycloak:
    image: quay.io/keycloak/keycloak:23.0.6
    command: start
    environment:
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8081
      KC_HOSTNAME_STRICT_BACKCHANNEL: false
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres/${POSTGRES_DB}
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - 8081:8080
    restart: always
    depends_on:
      - postgres
    networks:
      - local_network
        
  mailpit:
    image: axllent/mailpit:latest
    ports:
      - "8025:8025"   # Mailpit web interface
      - "1025:1025"   # SMTP
    environment:
      - MAILPIT_API=1
    networks:
      - local_network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false   # Disable security features
      - ES_JAVA_OPTS=-Xms512m -Xmx512m # Limits memory usage
    ports:
      - "9200:9200"  # HTTP interface
      - "9300:9300"  # Transport protocol
    networks:
      - local_network
    volumes:
      - elastic_data:/usr/share/elasticsearch/data

volumes:
  postgres_data:
    driver: local
  postgres_kweets_data:
    driver: local
  elastic_data:
    driver: local

networks:
  local_network:
    driver: bridge
